// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mysqlx.proto

package mysqlx

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClientMessages_Type int32

const (
	ClientMessages_CON_CAPABILITIES_GET       ClientMessages_Type = 1
	ClientMessages_CON_CAPABILITIES_SET       ClientMessages_Type = 2
	ClientMessages_CON_CLOSE                  ClientMessages_Type = 3
	ClientMessages_SESS_AUTHENTICATE_START    ClientMessages_Type = 4
	ClientMessages_SESS_AUTHENTICATE_CONTINUE ClientMessages_Type = 5
	ClientMessages_SESS_RESET                 ClientMessages_Type = 6
	ClientMessages_SESS_CLOSE                 ClientMessages_Type = 7
	ClientMessages_SQL_STMT_EXECUTE           ClientMessages_Type = 12
	ClientMessages_CRUD_FIND                  ClientMessages_Type = 17
	ClientMessages_CRUD_INSERT                ClientMessages_Type = 18
	ClientMessages_CRUD_UPDATE                ClientMessages_Type = 19
	ClientMessages_CRUD_DELETE                ClientMessages_Type = 20
	ClientMessages_EXPECT_OPEN                ClientMessages_Type = 24
	ClientMessages_EXPECT_CLOSE               ClientMessages_Type = 25
	ClientMessages_CRUD_CREATE_VIEW           ClientMessages_Type = 30
	ClientMessages_CRUD_MODIFY_VIEW           ClientMessages_Type = 31
	ClientMessages_CRUD_DROP_VIEW             ClientMessages_Type = 32
	ClientMessages_PREPARE_PREPARE            ClientMessages_Type = 40
	ClientMessages_PREPARE_EXECUTE            ClientMessages_Type = 41
	ClientMessages_PREPARE_DEALLOCATE         ClientMessages_Type = 42
	ClientMessages_CURSOR_OPEN                ClientMessages_Type = 43
	ClientMessages_CURSOR_CLOSE               ClientMessages_Type = 44
	ClientMessages_CURSOR_FETCH               ClientMessages_Type = 45
)

var ClientMessages_Type_name = map[int32]string{
	1:  "CON_CAPABILITIES_GET",
	2:  "CON_CAPABILITIES_SET",
	3:  "CON_CLOSE",
	4:  "SESS_AUTHENTICATE_START",
	5:  "SESS_AUTHENTICATE_CONTINUE",
	6:  "SESS_RESET",
	7:  "SESS_CLOSE",
	12: "SQL_STMT_EXECUTE",
	17: "CRUD_FIND",
	18: "CRUD_INSERT",
	19: "CRUD_UPDATE",
	20: "CRUD_DELETE",
	24: "EXPECT_OPEN",
	25: "EXPECT_CLOSE",
	30: "CRUD_CREATE_VIEW",
	31: "CRUD_MODIFY_VIEW",
	32: "CRUD_DROP_VIEW",
	40: "PREPARE_PREPARE",
	41: "PREPARE_EXECUTE",
	42: "PREPARE_DEALLOCATE",
	43: "CURSOR_OPEN",
	44: "CURSOR_CLOSE",
	45: "CURSOR_FETCH",
}
var ClientMessages_Type_value = map[string]int32{
	"CON_CAPABILITIES_GET":       1,
	"CON_CAPABILITIES_SET":       2,
	"CON_CLOSE":                  3,
	"SESS_AUTHENTICATE_START":    4,
	"SESS_AUTHENTICATE_CONTINUE": 5,
	"SESS_RESET":                 6,
	"SESS_CLOSE":                 7,
	"SQL_STMT_EXECUTE":           12,
	"CRUD_FIND":                  17,
	"CRUD_INSERT":                18,
	"CRUD_UPDATE":                19,
	"CRUD_DELETE":                20,
	"EXPECT_OPEN":                24,
	"EXPECT_CLOSE":               25,
	"CRUD_CREATE_VIEW":           30,
	"CRUD_MODIFY_VIEW":           31,
	"CRUD_DROP_VIEW":             32,
	"PREPARE_PREPARE":            40,
	"PREPARE_EXECUTE":            41,
	"PREPARE_DEALLOCATE":         42,
	"CURSOR_OPEN":                43,
	"CURSOR_CLOSE":               44,
	"CURSOR_FETCH":               45,
}

func (x ClientMessages_Type) Enum() *ClientMessages_Type {
	p := new(ClientMessages_Type)
	*p = x
	return p
}
func (x ClientMessages_Type) String() string {
	return proto.EnumName(ClientMessages_Type_name, int32(x))
}
func (x *ClientMessages_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ClientMessages_Type_value, data, "ClientMessages_Type")
	if err != nil {
		return err
	}
	*x = ClientMessages_Type(value)
	return nil
}
func (ClientMessages_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_mysqlx_f1c0efcedcf0fb2c, []int{0, 0}
}

type ServerMessages_Type int32

const (
	ServerMessages_OK                         ServerMessages_Type = 0
	ServerMessages_ERROR                      ServerMessages_Type = 1
	ServerMessages_CONN_CAPABILITIES          ServerMessages_Type = 2
	ServerMessages_SESS_AUTHENTICATE_CONTINUE ServerMessages_Type = 3
	ServerMessages_SESS_AUTHENTICATE_OK       ServerMessages_Type = 4
	// NOTICE has to stay at 11 forever
	ServerMessages_NOTICE                               ServerMessages_Type = 11
	ServerMessages_RESULTSET_COLUMN_META_DATA           ServerMessages_Type = 12
	ServerMessages_RESULTSET_ROW                        ServerMessages_Type = 13
	ServerMessages_RESULTSET_FETCH_DONE                 ServerMessages_Type = 14
	ServerMessages_RESULTSET_FETCH_SUSPENDED            ServerMessages_Type = 15
	ServerMessages_RESULTSET_FETCH_DONE_MORE_RESULTSETS ServerMessages_Type = 16
	ServerMessages_SQL_STMT_EXECUTE_OK                  ServerMessages_Type = 17
	ServerMessages_RESULTSET_FETCH_DONE_MORE_OUT_PARAMS ServerMessages_Type = 18
)

var ServerMessages_Type_name = map[int32]string{
	0:  "OK",
	1:  "ERROR",
	2:  "CONN_CAPABILITIES",
	3:  "SESS_AUTHENTICATE_CONTINUE",
	4:  "SESS_AUTHENTICATE_OK",
	11: "NOTICE",
	12: "RESULTSET_COLUMN_META_DATA",
	13: "RESULTSET_ROW",
	14: "RESULTSET_FETCH_DONE",
	15: "RESULTSET_FETCH_SUSPENDED",
	16: "RESULTSET_FETCH_DONE_MORE_RESULTSETS",
	17: "SQL_STMT_EXECUTE_OK",
	18: "RESULTSET_FETCH_DONE_MORE_OUT_PARAMS",
}
var ServerMessages_Type_value = map[string]int32{
	"OK":                                   0,
	"ERROR":                                1,
	"CONN_CAPABILITIES":                    2,
	"SESS_AUTHENTICATE_CONTINUE":           3,
	"SESS_AUTHENTICATE_OK":                 4,
	"NOTICE":                               11,
	"RESULTSET_COLUMN_META_DATA":           12,
	"RESULTSET_ROW":                        13,
	"RESULTSET_FETCH_DONE":                 14,
	"RESULTSET_FETCH_SUSPENDED":            15,
	"RESULTSET_FETCH_DONE_MORE_RESULTSETS": 16,
	"SQL_STMT_EXECUTE_OK":                  17,
	"RESULTSET_FETCH_DONE_MORE_OUT_PARAMS": 18,
}

func (x ServerMessages_Type) Enum() *ServerMessages_Type {
	p := new(ServerMessages_Type)
	*p = x
	return p
}
func (x ServerMessages_Type) String() string {
	return proto.EnumName(ServerMessages_Type_name, int32(x))
}
func (x *ServerMessages_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerMessages_Type_value, data, "ServerMessages_Type")
	if err != nil {
		return err
	}
	*x = ServerMessages_Type(value)
	return nil
}
func (ServerMessages_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_mysqlx_f1c0efcedcf0fb2c, []int{1, 0}
}

type Error_Severity int32

const (
	Error_ERROR Error_Severity = 0
	Error_FATAL Error_Severity = 1
)

var Error_Severity_name = map[int32]string{
	0: "ERROR",
	1: "FATAL",
}
var Error_Severity_value = map[string]int32{
	"ERROR": 0,
	"FATAL": 1,
}

func (x Error_Severity) Enum() *Error_Severity {
	p := new(Error_Severity)
	*p = x
	return p
}
func (x Error_Severity) String() string {
	return proto.EnumName(Error_Severity_name, int32(x))
}
func (x *Error_Severity) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Error_Severity_value, data, "Error_Severity")
	if err != nil {
		return err
	}
	*x = Error_Severity(value)
	return nil
}
func (Error_Severity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_mysqlx_f1c0efcedcf0fb2c, []int{3, 0}
}

// IDs of messages that can be sent from client to the server
//
// .. note::
//   this message is never sent on the wire. It is only used to let ``protoc``
//
//   * generate constants
//   * check for uniqueness
type ClientMessages struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientMessages) Reset()         { *m = ClientMessages{} }
func (m *ClientMessages) String() string { return proto.CompactTextString(m) }
func (*ClientMessages) ProtoMessage()    {}
func (*ClientMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_mysqlx_f1c0efcedcf0fb2c, []int{0}
}
func (m *ClientMessages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientMessages.Unmarshal(m, b)
}
func (m *ClientMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientMessages.Marshal(b, m, deterministic)
}
func (dst *ClientMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientMessages.Merge(dst, src)
}
func (m *ClientMessages) XXX_Size() int {
	return xxx_messageInfo_ClientMessages.Size(m)
}
func (m *ClientMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientMessages.DiscardUnknown(m)
}

var xxx_messageInfo_ClientMessages proto.InternalMessageInfo

// IDs of messages that can be sent from server to client
//
// .. note::
//   this message is never sent on the wire. It is only used to let ``protoc``
//
//   * generate constants
//   * check for uniqueness
type ServerMessages struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerMessages) Reset()         { *m = ServerMessages{} }
func (m *ServerMessages) String() string { return proto.CompactTextString(m) }
func (*ServerMessages) ProtoMessage()    {}
func (*ServerMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_mysqlx_f1c0efcedcf0fb2c, []int{1}
}
func (m *ServerMessages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerMessages.Unmarshal(m, b)
}
func (m *ServerMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerMessages.Marshal(b, m, deterministic)
}
func (dst *ServerMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerMessages.Merge(dst, src)
}
func (m *ServerMessages) XXX_Size() int {
	return xxx_messageInfo_ServerMessages.Size(m)
}
func (m *ServerMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerMessages.DiscardUnknown(m)
}

var xxx_messageInfo_ServerMessages proto.InternalMessageInfo

// generic Ok message
type Ok struct {
	Msg                  *string  `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ok) Reset()         { *m = Ok{} }
func (m *Ok) String() string { return proto.CompactTextString(m) }
func (*Ok) ProtoMessage()    {}
func (*Ok) Descriptor() ([]byte, []int) {
	return fileDescriptor_mysqlx_f1c0efcedcf0fb2c, []int{2}
}
func (m *Ok) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ok.Unmarshal(m, b)
}
func (m *Ok) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ok.Marshal(b, m, deterministic)
}
func (dst *Ok) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ok.Merge(dst, src)
}
func (m *Ok) XXX_Size() int {
	return xxx_messageInfo_Ok.Size(m)
}
func (m *Ok) XXX_DiscardUnknown() {
	xxx_messageInfo_Ok.DiscardUnknown(m)
}

var xxx_messageInfo_Ok proto.InternalMessageInfo

func (m *Ok) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

// generic Error message
//
// A ``severity`` of ``ERROR`` indicates the current message sequence is
// aborted for the given error and the session is ready for more.
//
// In case of a ``FATAL`` error message the client should not expect
// the server to continue handling any further messages and should
// close the connection.
//
// :param severity: severity of the error message
// :param code: error-code
// :param sql_state: SQL state
// :param msg: human readable error message
type Error struct {
	Severity             *Error_Severity `protobuf:"varint,1,opt,name=severity,enum=Mysqlx.Error_Severity,def=0" json:"severity,omitempty"`
	Code                 *uint32         `protobuf:"varint,2,req,name=code" json:"code,omitempty"`
	SqlState             *string         `protobuf:"bytes,4,req,name=sql_state,json=sqlState" json:"sql_state,omitempty"`
	Msg                  *string         `protobuf:"bytes,3,req,name=msg" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_mysqlx_f1c0efcedcf0fb2c, []int{3}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (dst *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(dst, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

const Default_Error_Severity Error_Severity = Error_ERROR

func (m *Error) GetSeverity() Error_Severity {
	if m != nil && m.Severity != nil {
		return *m.Severity
	}
	return Default_Error_Severity
}

func (m *Error) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *Error) GetSqlState() string {
	if m != nil && m.SqlState != nil {
		return *m.SqlState
	}
	return ""
}

func (m *Error) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

var E_ClientMessageId = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*ClientMessages_Type)(nil),
	Field:         100001,
	Name:          "Mysqlx.client_message_id",
	Tag:           "varint,100001,opt,name=client_message_id,json=clientMessageId,enum=Mysqlx.ClientMessages_Type",
	Filename:      "mysqlx.proto",
}

var E_ServerMessageId = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*ServerMessages_Type)(nil),
	Field:         100002,
	Name:          "Mysqlx.server_message_id",
	Tag:           "varint,100002,opt,name=server_message_id,json=serverMessageId,enum=Mysqlx.ServerMessages_Type",
	Filename:      "mysqlx.proto",
}

func init() {
	proto.RegisterType((*ClientMessages)(nil), "Mysqlx.ClientMessages")
	proto.RegisterType((*ServerMessages)(nil), "Mysqlx.ServerMessages")
	proto.RegisterType((*Ok)(nil), "Mysqlx.Ok")
	proto.RegisterType((*Error)(nil), "Mysqlx.Error")
	proto.RegisterEnum("Mysqlx.ClientMessages_Type", ClientMessages_Type_name, ClientMessages_Type_value)
	proto.RegisterEnum("Mysqlx.ServerMessages_Type", ServerMessages_Type_name, ServerMessages_Type_value)
	proto.RegisterEnum("Mysqlx.Error_Severity", Error_Severity_name, Error_Severity_value)
	proto.RegisterExtension(E_ClientMessageId)
	proto.RegisterExtension(E_ServerMessageId)
}

func init() { proto.RegisterFile("mysqlx.proto", fileDescriptor_mysqlx_f1c0efcedcf0fb2c) }

var fileDescriptor_mysqlx_f1c0efcedcf0fb2c = []byte{
	// 739 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xcd, 0x72, 0xe3, 0x44,
	0x10, 0xc7, 0xd7, 0xb2, 0x63, 0xe2, 0x5e, 0x7f, 0x8c, 0x27, 0x61, 0xe3, 0x6c, 0x60, 0xd7, 0xe5,
	0xe2, 0x60, 0xbe, 0xb4, 0x14, 0x37, 0x72, 0xd3, 0x4a, 0x6d, 0x56, 0xb5, 0x92, 0x46, 0xcc, 0x8c,
	0x48, 0x38, 0x4d, 0x05, 0x5b, 0xb8, 0x1c, 0xec, 0xc8, 0x91, 0x4c, 0x2a, 0x79, 0x08, 0xaa, 0x78,
	0x05, 0xb8, 0xf3, 0x2c, 0x5c, 0x39, 0x73, 0x84, 0x97, 0xa0, 0x34, 0xb2, 0x15, 0xe7, 0xa3, 0xa0,
	0xf6, 0xe4, 0x99, 0xdf, 0x7f, 0xa6, 0xfb, 0x3f, 0xee, 0x56, 0x43, 0x73, 0x71, 0x93, 0x5d, 0xce,
	0xaf, 0xcd, 0x65, 0x9a, 0xac, 0x12, 0x5a, 0xf7, 0xf5, 0xee, 0x79, 0x7f, 0x9a, 0x24, 0xd3, 0x79,
	0xfc, 0x4a, 0xd3, 0xef, 0x7f, 0xfa, 0xe1, 0xd5, 0x24, 0xce, 0xc6, 0xe9, 0x6c, 0xb9, 0x4a, 0xd2,
	0xe2, 0xe4, 0xe0, 0x9f, 0x2a, 0xb4, 0xed, 0xf9, 0x2c, 0xbe, 0x58, 0xf9, 0x71, 0x96, 0x9d, 0x4d,
	0xe3, 0x6c, 0xf0, 0x67, 0x15, 0x6a, 0xf2, 0x66, 0x19, 0xd3, 0x1e, 0xec, 0xdb, 0x2c, 0x50, 0xb6,
	0x15, 0x5a, 0xaf, 0x5d, 0xcf, 0x95, 0x2e, 0x0a, 0xf5, 0x35, 0x4a, 0x52, 0x79, 0x54, 0x11, 0x28,
	0x89, 0x41, 0x5b, 0xd0, 0xd0, 0x8a, 0xc7, 0x04, 0x92, 0x2a, 0x3d, 0x82, 0x03, 0x81, 0x42, 0x28,
	0x2b, 0x92, 0x6f, 0x30, 0x90, 0xae, 0x6d, 0x49, 0x54, 0x42, 0x5a, 0x5c, 0x92, 0x1a, 0x7d, 0x01,
	0xcf, 0x1f, 0x8a, 0x36, 0x0b, 0xa4, 0x1b, 0x44, 0x48, 0x76, 0x68, 0x1b, 0x40, 0xeb, 0x1c, 0xf3,
	0xd8, 0xf5, 0x72, 0x5f, 0x04, 0x7f, 0x8f, 0xee, 0x03, 0x11, 0xdf, 0x78, 0x4a, 0x48, 0x5f, 0x2a,
	0x3c, 0x45, 0x3b, 0x92, 0x48, 0x9a, 0xda, 0x01, 0x8f, 0x1c, 0x35, 0x72, 0x03, 0x87, 0x74, 0x69,
	0x07, 0x9e, 0xea, 0xad, 0x1b, 0x08, 0xe4, 0x92, 0xd0, 0x12, 0x44, 0xa1, 0x63, 0x49, 0x24, 0x7b,
	0x25, 0x70, 0xd0, 0x43, 0x89, 0x64, 0x3f, 0x07, 0x78, 0x1a, 0xa2, 0x2d, 0x15, 0x0b, 0x31, 0x20,
	0x3d, 0x4a, 0xa0, 0xb9, 0x06, 0x45, 0xea, 0xc3, 0x3c, 0xb5, 0xbe, 0x63, 0x73, 0xcc, 0x4d, 0x7f,
	0xeb, 0xe2, 0x09, 0x79, 0x51, 0x52, 0x9f, 0x39, 0xee, 0xe8, 0xbb, 0x82, 0xbe, 0xa4, 0x14, 0xda,
	0x45, 0x7c, 0xce, 0xc2, 0x82, 0xf5, 0xe9, 0x1e, 0x74, 0x42, 0x8e, 0xa1, 0xc5, 0x51, 0xad, 0x7f,
	0xc9, 0x70, 0x1b, 0x6e, 0x9e, 0xf3, 0x31, 0x7d, 0x06, 0x74, 0x03, 0x1d, 0xb4, 0x3c, 0x8f, 0xe5,
	0xff, 0x12, 0xf9, 0x44, 0xbb, 0x8e, 0xb8, 0x60, 0xbc, 0x30, 0xf9, 0x69, 0x6e, 0x72, 0x0d, 0x0a,
	0x93, 0x9f, 0x6d, 0x91, 0x11, 0x4a, 0xfb, 0x0d, 0xf9, 0x7c, 0xf0, 0x97, 0x01, 0x6d, 0x11, 0xa7,
	0x57, 0x71, 0x5a, 0x56, 0xfb, 0x0f, 0x63, 0x5d, 0xed, 0x3a, 0x18, 0xec, 0x2d, 0x79, 0x42, 0x1b,
	0xb0, 0x83, 0x9c, 0x33, 0x4e, 0x2a, 0xf4, 0x7d, 0xe8, 0xda, 0x2c, 0xb8, 0x5b, 0x67, 0x62, 0xfc,
	0x4f, 0xdd, 0xaa, 0x79, 0x77, 0x3c, 0xd4, 0xd9, 0x5b, 0x52, 0xa3, 0x00, 0xf5, 0x80, 0x49, 0xd7,
	0x46, 0xf2, 0x34, 0x8f, 0xc2, 0x51, 0x44, 0x9e, 0x14, 0x28, 0x95, 0xcd, 0xbc, 0xc8, 0x0f, 0x94,
	0x8f, 0xd2, 0x52, 0x8e, 0x25, 0x2d, 0xd2, 0xa4, 0x5d, 0x68, 0xdd, 0xea, 0x9c, 0x9d, 0x90, 0x56,
	0x1e, 0xf8, 0x16, 0xe9, 0x37, 0x29, 0x87, 0x05, 0x48, 0xda, 0xf4, 0x43, 0x38, 0xbc, 0xaf, 0x88,
	0x48, 0x84, 0x18, 0x38, 0xe8, 0x90, 0x0e, 0x1d, 0xc2, 0x47, 0x8f, 0x5d, 0x54, 0x3e, 0xe3, 0xa8,
	0x4a, 0x45, 0x10, 0x42, 0x0f, 0x60, 0xef, 0x7e, 0x4f, 0xe5, 0xd6, 0xbb, 0xff, 0x1d, 0x82, 0x45,
	0x52, 0x85, 0x16, 0xb7, 0x7c, 0x41, 0xe8, 0xe0, 0x03, 0x30, 0xd8, 0x8f, 0x94, 0x40, 0x75, 0x91,
	0x4d, 0x7b, 0x95, 0x7e, 0x65, 0xd8, 0xe0, 0xf9, 0xf2, 0xb8, 0xf6, 0xcb, 0xdf, 0x5f, 0x3c, 0x19,
	0xfc, 0x5e, 0x81, 0x1d, 0x4c, 0xd3, 0x24, 0xa5, 0x5f, 0xc1, 0x6e, 0x16, 0x5f, 0xc5, 0xe9, 0x6c,
	0x75, 0xa3, 0x8f, 0xb5, 0xbf, 0x7c, 0x66, 0x16, 0xdf, 0xad, 0xa9, 0x0f, 0x98, 0x62, 0xad, 0x1e,
	0x17, 0x05, 0xe1, 0xe5, 0x71, 0x4a, 0xa1, 0x36, 0x4e, 0x26, 0x71, 0xcf, 0xe8, 0x1b, 0xc3, 0x16,
	0xd7, 0x6b, 0x7a, 0x04, 0x8d, 0xec, 0x72, 0xae, 0xb2, 0xd5, 0xd9, 0x2a, 0xee, 0xd5, 0xfa, 0xc6,
	0xb0, 0xc1, 0x77, 0xb3, 0xcb, 0xb9, 0xc8, 0xf7, 0x1b, 0x37, 0x55, 0x8d, 0xf3, 0xe5, 0xa0, 0x0f,
	0xbb, 0x9b, 0xf8, 0xb7, 0x25, 0xd7, 0xd5, 0x1f, 0x59, 0xd2, 0xf2, 0x48, 0x45, 0xfb, 0xad, 0x1c,
	0x9f, 0x43, 0x77, 0xac, 0xe7, 0x83, 0x5a, 0x14, 0x2d, 0xa3, 0x66, 0x13, 0xfa, 0xd2, 0x2c, 0x06,
	0x8b, 0xb9, 0x19, 0x2c, 0xe6, 0xba, 0x9f, 0xd8, 0x72, 0x35, 0x4b, 0x2e, 0xb2, 0xde, 0xaf, 0x3f,
	0xd7, 0xf5, 0x8b, 0x8e, 0x36, 0x2f, 0xba, 0x3b, 0x63, 0xcc, 0xbc, 0xe3, 0x78, 0x67, 0xbc, 0x0d,
	0xdd, 0x49, 0x9e, 0x2b, 0xd3, 0xdd, 0xf9, 0x4e, 0xb9, 0x7e, 0xbb, 0x9f, 0xeb, 0x6e, 0x87, 0xaf,
	0x73, 0x65, 0xdb, 0xd0, 0x9d, 0xbc, 0x3e, 0x84, 0x83, 0x71, 0xb2, 0x30, 0xf5, 0xd8, 0x34, 0xc7,
	0xe7, 0xe6, 0x75, 0x19, 0xff, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x87, 0xfa, 0x11, 0x4c,
	0x05, 0x00, 0x00,
}
